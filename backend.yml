
- name: Disable Node.js module using dnf
  hosts: backend
  become: yes  # Use become if you need elevated privileges
  tasks:
    - name: Disable the nodejs module
      ansible.builtin.command:  dnf module disable nodejs -y

    - name: Disable the nodejs module
      ansible.builtin.command:  dnf module enable nodejs:20 -y 

    - name: Install MySQL server
      ansible.builtin.package:
        name: "{{item}}"
        state: present  
      loop:
        - mysql
        - nodejs  

    - name: Create user 'expense'
      ansible.builtin.user:
        name: expense
        state: present

    - name: Ensure the directory /path/to/directory exists
      ansible.builtin.file:
        path: /app
        state: directory   


    - name: Download file from URL
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip

        dest:   /tmp/backend.zip 

    - name: Unzip the file
      ansible.builtin.unarchive:
        src:  /tmp/backend.zip 
        dest: /app
        remote_src: yes  

    - name: installing dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app 

    - name: Copy a file to remote host
      ansible.builtin.copy:
        src: backend.service  # Local file you want to copy
        dest:  /etc/systemd/system/backend.service 

    - name: installing pip
      ansible.builtin.pip:
        name:  "{{item}}"  
        state: present  
      loop:
       -  PyMySQL
       -  cryptography
       

    - name: Create the MySQL database
      community.mysql.mysql_db:
        name: all
      
        login_user: root
        login_password: ExpenseApp@1
        login_host: mysql.daws83s.shop
        state: import
        target: /app/schema/backend.sql


    - name: ansible to restart
      ansible.builtin.service:
        name: backend
        state: restart    
      
   